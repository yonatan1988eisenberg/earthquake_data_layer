name: CI-Tests
on:
  pull_request:
    branches:
      - 'dev'
  push:
    branches:
      - 'dev'

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
            # check-out repo and set-up python
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.12

      # install & configure poetry
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # load cached venv if cache exists
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      # install dependencies if cache does not exist
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      # install your root project, if required
      - name: Install project
        run: poetry install --no-interaction
      # install and run linters
      - run: |
          pylint *
          black . --check
          isort .
# ----------------
#     TEStING
# ----------------
  test:
    needs: linting
    runs-on: ubuntu-latest
    steps:
      # check-out repo and set-up python
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: 3.10

      # install & configure poetry
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # load cached venv if cache exists
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      # install dependencies if cache does not exist
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      # install your root project, if required
      - name: Install project
        run: poetry install --no-interaction

      # run tests
      - name: Run tests
        run: |
         source .venv/bin/activate
         pytest tests/
         coverage report

      # run integration tests
      - name: integration_test
        run: make integration_test
